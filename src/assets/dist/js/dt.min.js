/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/dt.js":
/*!**********************!*\
  !*** ./src/js/dt.js ***!
  \**********************/
/***/ (() => {

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var ThemeToggler = /*#__PURE__*/function () {
  function ThemeToggler() {
    _classCallCheck(this, ThemeToggler);

    _defineProperty(this, "trigger", null);

    _defineProperty(this, "class", "");

    _defineProperty(this, "themeBaseUrl", "");

    this.trigger = document.getElementById("settings-js-dt-theme");
    this.nav = document.getElementById("nav");
  }

  _createClass(ThemeToggler, [{
    key: "run",
    value: function run() {
      this.setEventListeners();
      this.setGlobalSidebar();
    }
  }, {
    key: "setEventListeners",
    value: function setEventListeners() {
      var _this = this;

      if (!this.trigger) {
        return;
      }

      this.trigger.addEventListener("click", function (e) {
        _this["class"] = e.target.value;

        _this.onTriggerClick();
      });
    }
  }, {
    key: "onTriggerClick",
    value: function onTriggerClick() {
      this.toggleClass();
      this.toggleStylesheet();
      this.toggleWidgets();
    }
  }, {
    key: "toggleClass",
    value: function toggleClass() {
      document.body.classList.forEach(function (element) {
        if (element.includes("dt-")) {
          document.body.classList.remove(element);
        }
      });
      document.body.classList.add(this["class"]);
    }
  }, {
    key: "toggleStylesheet",
    value: function toggleStylesheet() {
      var _this2 = this;

      var sheets = document.querySelectorAll("link[rel=stylesheet]");
      sheets.forEach(function (sheet, i) {
        if (sheet.href.includes("dt-")) {
          _this2.themeBaseUrl = sheet.href.replace(/dt-.*/, '');
          sheets[i].remove();
        }
      });
      this.createStylesheet();
    }
  }, {
    key: "getIsActive",
    value: function getIsActive() {
      return !document.body.classList.contains('dt-default');
    }
  }, {
    key: "getWidget",
    value: function getWidget() {
      return document.getElementById('js-dt-widget');
    }
  }, {
    key: "toggleWidgets",
    value: function toggleWidgets() {
      if (!this.getIsActive()) {
        var _this$getWidget;

        (_this$getWidget = this.getWidget()) === null || _this$getWidget === void 0 ? void 0 : _this$getWidget.remove();
      } else {
        this.setGlobalSidebar();
      }
    }
  }, {
    key: "createStylesheet",
    value: function createStylesheet() {
      var head = document.getElementsByTagName("head")[0];
      var style = document.createElement("link");
      style.href = this.themeBaseUrl + this["class"] + ".min.css";
      style.type = "text/css";
      style.rel = "stylesheet";
      head.append(style);
    }
  }, {
    key: "setGlobalSidebar",
    value: function setGlobalSidebar() {
      if (!this.getIsActive() || this.getWidget()) {
        return;
      }

      var widget = document.createElement("div");
      var html = this.htmlEntities(window.__DT.widgetHtml);
      widget.innerHTML = html;
      this.nav.append(widget);
    }
  }, {
    key: "htmlEntities",
    value: function htmlEntities(htmlStr) {
      htmlStr = htmlStr.replace(/&lt;/g, "<");
      htmlStr = htmlStr.replace(/&gt;/g, ">");
      htmlStr = htmlStr.replace(/&quot;/g, "\"");
      htmlStr = htmlStr.replace(/&#39;/g, "\'");
      htmlStr = htmlStr.replace(/&amp;/g, "&");
      return htmlStr;
    }
  }]);

  return ThemeToggler;
}();

addEventListener("load", function () {
  var theme = new ThemeToggler();
  theme.run();
});

/***/ }),

/***/ "./src/scss/themes/dt-purple/theme.scss":
/*!**********************************************!*\
  !*** ./src/scss/themes/dt-purple/theme.scss ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/chunk loaded */
/******/ 	(() => {
/******/ 		var deferred = [];
/******/ 		__webpack_require__.O = (result, chunkIds, fn, priority) => {
/******/ 			if(chunkIds) {
/******/ 				priority = priority || 0;
/******/ 				for(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];
/******/ 				deferred[i] = [chunkIds, fn, priority];
/******/ 				return;
/******/ 			}
/******/ 			var notFulfilled = Infinity;
/******/ 			for (var i = 0; i < deferred.length; i++) {
/******/ 				var [chunkIds, fn, priority] = deferred[i];
/******/ 				var fulfilled = true;
/******/ 				for (var j = 0; j < chunkIds.length; j++) {
/******/ 					if ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {
/******/ 						chunkIds.splice(j--, 1);
/******/ 					} else {
/******/ 						fulfilled = false;
/******/ 						if(priority < notFulfilled) notFulfilled = priority;
/******/ 					}
/******/ 				}
/******/ 				if(fulfilled) {
/******/ 					deferred.splice(i--, 1)
/******/ 					var r = fn();
/******/ 					if (r !== undefined) result = r;
/******/ 				}
/******/ 			}
/******/ 			return result;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"/dist/js/dt.min": 0,
/******/ 			"dist/css/dt-purple.min": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 			return __webpack_require__.O(result);
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunkapp"] = self["webpackChunkapp"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module depends on other loaded chunks and execution need to be delayed
/******/ 	__webpack_require__.O(undefined, ["dist/css/dt-purple.min"], () => (__webpack_require__("./src/js/dt.js")))
/******/ 	var __webpack_exports__ = __webpack_require__.O(undefined, ["dist/css/dt-purple.min"], () => (__webpack_require__("./src/scss/themes/dt-purple/theme.scss")))
/******/ 	__webpack_exports__ = __webpack_require__.O(__webpack_exports__);
/******/ 	
/******/ })()
;